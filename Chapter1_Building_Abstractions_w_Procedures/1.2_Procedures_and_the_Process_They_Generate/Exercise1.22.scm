(define (search-for-primes n)
	(newline)
	(display "finding three smallest prime greater than ")
	(display n)
	(newline)
	(start-searching-prime n 0 3 (real-time-clock))
)

(define (start-searching-prime n number-of-primes count start-time)
	(cond ((= number-of-primes count) (report-prime (- (real-time-clock) start-time)))
		  ((prime? n) 
		  	(display n)
			(newline)
		  	(start-searching-prime (+ n 1) (+ number-of-primes 1) count start-time))
		  (else (start-searching-prime (+ n 1) number-of-primes count start-time))
	)
)

(define (prime? n)
	(if (= (find-smallest-divisor n 2) n) true false)
)

(define (find-smallest-divisor n test-divisor)
	(cond ((> (* test-divisor test-divisor) n) n)
		  ((= (remainder n test-divisor) 0) test-divisor)
		  (else (find-smallest-divisor n (+ test-divisor 1)))
	)
)

(define (report-prime elapsed-time)
	(display "***")
	(newline)
	(display elapsed-time)
)


(search-for-primes 1000000)	
(search-for-primes 10000000)	
(search-for-primes 100000000)	
(search-for-primes 1000000000)	
